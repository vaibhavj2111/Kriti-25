{"version":3,"file":"index.es.js","sources":["../src/caip.ts","../src/misc.ts","../src/signatures.ts","../src/cacao.ts","../src/crypto.ts","../src/relay.ts","../src/uri.ts","../src/namespaces.ts","../src/errors.ts","../src/validators.ts","../src/network.ts","../src/memoryStore.ts"],"sourcesContent":["import { SessionTypes, ProposalTypes } from \"@walletconnect/types\";\n\ninterface ChainIdParams {\n  namespace: string;\n  reference: string;\n}\n\ninterface AccountIdParams extends ChainIdParams {\n  address: string;\n}\n\nconst CAIP_DELIMITER = \":\";\n\nexport function parseChainId(chain: string): ChainIdParams {\n  const [namespace, reference] = chain.split(CAIP_DELIMITER);\n  return { namespace, reference };\n}\n\nexport function formatChainId(params: ChainIdParams): string {\n  const { namespace, reference } = params;\n  return [namespace, reference].join(CAIP_DELIMITER);\n}\n\nexport function parseAccountId(account: string): AccountIdParams {\n  const [namespace, reference, address] = account.split(CAIP_DELIMITER);\n  return { namespace, reference, address };\n}\n\nexport function formatAccountId(params: AccountIdParams): string {\n  const { namespace, reference, address } = params;\n  return [namespace, reference, address].join(CAIP_DELIMITER);\n}\n\nexport function getUniqueValues(array: string[], parser: (str: string) => string): string[] {\n  const unique: string[] = [];\n  array.forEach((str) => {\n    const value = parser(str);\n    if (!unique.includes(value)) unique.push(value);\n  });\n  return unique;\n}\n\nexport function getAddressFromAccount(account: string) {\n  const { address } = parseAccountId(account);\n  return address;\n}\n\nexport function getChainFromAccount(account: string) {\n  const { namespace, reference } = parseAccountId(account);\n  const chain = formatChainId({ namespace, reference });\n  return chain;\n}\n\nexport function formatAccountWithChain(address: string, chain: string) {\n  const { namespace, reference } = parseChainId(chain);\n  const account = formatAccountId({ namespace, reference, address });\n  return account;\n}\n\nexport function getAddressesFromAccounts(accounts: string[]) {\n  return getUniqueValues(accounts, getAddressFromAccount);\n}\n\nexport function getChainsFromAccounts(accounts: string[]) {\n  return getUniqueValues(accounts, getChainFromAccount);\n}\n\nexport function getAccountsFromNamespaces(\n  namespaces: SessionTypes.Namespaces,\n  keys: string[] = [],\n): string[] {\n  const accounts: string[] = [];\n  Object.keys(namespaces).forEach((key) => {\n    if (keys.length && !keys.includes(key)) return;\n    const ns = namespaces[key];\n    accounts.push(...ns.accounts);\n  });\n  return accounts;\n}\n\nexport function getChainsFromNamespaces(\n  namespaces: SessionTypes.Namespaces,\n  keys: string[] = [],\n): string[] {\n  const chains: string[] = [];\n  Object.keys(namespaces).forEach((key) => {\n    if (keys.length && !keys.includes(key)) return;\n    const ns = namespaces[key];\n    chains.push(...getChainsFromAccounts(ns.accounts));\n  });\n  return chains;\n}\n\nexport function getChainsFromRequiredNamespaces(\n  requiredNamespaces: ProposalTypes.RequiredNamespaces,\n  keys: string[] = [],\n): string[] {\n  const chains: string[] = [];\n  Object.keys(requiredNamespaces).forEach((key) => {\n    if (keys.length && !keys.includes(key)) return;\n    const ns = requiredNamespaces[key];\n    chains.push(...getChainsFromNamespace(key, ns));\n  });\n  return chains;\n}\n\nexport function getChainsFromNamespace(\n  namespace: string,\n  namespaceProps: ProposalTypes.BaseRequiredNamespace,\n) {\n  // check if chainId is provided in the key as `eip155:1` or in the namespace as chains[]\n  return namespace.includes(\":\") ? [namespace] : namespaceProps.chains || [];\n}\n","import { detect } from \"detect-browser\";\nimport { FIVE_MINUTES, fromMiliseconds, toMiliseconds } from \"@walletconnect/time\";\nimport {\n  SignClientTypes,\n  RelayerClientMetadata,\n  EngineTypes,\n  RelayerTypes,\n} from \"@walletconnect/types\";\nimport { getDocument, getLocation, getNavigator } from \"@walletconnect/window-getters\";\nimport { getWindowMetadata } from \"@walletconnect/window-metadata\";\nimport { ErrorResponse } from \"@walletconnect/jsonrpc-utils\";\nimport { IKeyValueStorage } from \"@walletconnect/keyvaluestorage\";\n\n// -- constants -----------------------------------------//\nexport const REACT_NATIVE_PRODUCT = \"ReactNative\";\n\nexport const ENV_MAP = {\n  reactNative: \"react-native\",\n  node: \"node\",\n  browser: \"browser\",\n  unknown: \"unknown\",\n};\n\nexport const EMPTY_SPACE = \" \";\n\nexport const COLON = \":\";\n\nexport const SLASH = \"/\";\n\nexport const DEFAULT_DEPTH = 2;\n\nexport const ONE_THOUSAND = 1000;\n\nexport const SDK_TYPE = \"js\";\n\n// -- env -----------------------------------------------//\n\nexport function isNode(): boolean {\n  return (\n    typeof process !== \"undefined\" &&\n    typeof process.versions !== \"undefined\" &&\n    typeof process.versions.node !== \"undefined\"\n  );\n}\n\nexport function isReactNative(): boolean {\n  return !getDocument() && !!getNavigator() && navigator.product === REACT_NATIVE_PRODUCT;\n}\n\nexport function isAndroid(): boolean {\n  return (\n    isReactNative() &&\n    typeof global !== \"undefined\" &&\n    typeof (global as any)?.Platform !== \"undefined\" &&\n    (global as any)?.Platform.OS === \"android\"\n  );\n}\n\nexport function isIos(): boolean {\n  return (\n    isReactNative() &&\n    typeof global !== \"undefined\" &&\n    typeof (global as any)?.Platform !== \"undefined\" &&\n    (global as any)?.Platform.OS === \"ios\"\n  );\n}\n\nexport function isBrowser(): boolean {\n  return !isNode() && !!getNavigator() && !!getDocument();\n}\n\nexport function getEnvironment(): string {\n  if (isReactNative()) return ENV_MAP.reactNative;\n  if (isNode()) return ENV_MAP.node;\n  if (isBrowser()) return ENV_MAP.browser;\n  return ENV_MAP.unknown;\n}\n\nexport function getAppId(): string | undefined {\n  try {\n    if (\n      isReactNative() &&\n      typeof global !== \"undefined\" &&\n      typeof (global as any)?.Application !== \"undefined\"\n    ) {\n      return (global as any).Application?.applicationId;\n    }\n    return undefined;\n  } catch {\n    return undefined;\n  }\n}\n\n// -- query -----------------------------------------------//\n\nexport function appendToQueryString(\n  queryString: string,\n  newQueryParams: Record<string, any>,\n): string {\n  const urlSearchParams = new URLSearchParams(queryString);\n\n  for (const key of Object.keys(newQueryParams).sort()) {\n    if (newQueryParams.hasOwnProperty(key)) {\n      const value = newQueryParams[key];\n      if (value !== undefined) {\n        urlSearchParams.set(key, value);\n      }\n    }\n  }\n\n  return urlSearchParams.toString();\n}\n\n// -- metadata ----------------------------------------------//\n\nexport function getAppMetadata(): SignClientTypes.Metadata {\n  return (\n    getWindowMetadata() || {\n      name: \"\",\n      description: \"\",\n      url: \"\",\n      icons: [\"\"],\n    }\n  );\n}\n\nexport function getRelayClientMetadata(protocol: string, version: number): RelayerClientMetadata {\n  const env = getEnvironment();\n\n  const metadata: RelayerClientMetadata = { protocol, version, env };\n  if (env === \"browser\") {\n    metadata.host = getLocation()?.host || \"unknown\";\n  }\n  return metadata;\n}\n\n// -- rpcUrl ----------------------------------------------//\n\nexport function getJavascriptOS() {\n  const env = getEnvironment();\n  // global.Platform is set by react-native-compat\n  if (\n    env === ENV_MAP.reactNative &&\n    typeof global !== \"undefined\" &&\n    typeof (global as any)?.Platform !== \"undefined\"\n  ) {\n    const { OS, Version } = (global as any).Platform;\n    return [OS, Version].join(\"-\");\n  }\n\n  const info = detect();\n  if (info === null) return \"unknown\";\n  const os = info.os ? info.os.replace(\" \", \"\").toLowerCase() : \"unknown\";\n  if (info.type === \"browser\") {\n    return [os, info.name, info.version].join(\"-\");\n  }\n  return [os, info.version].join(\"-\");\n}\n\nexport function getJavascriptID() {\n  const env = getEnvironment();\n  return env === ENV_MAP.browser ? [env, getLocation()?.host || \"unknown\"].join(\":\") : env;\n}\n\nexport function formatUA(protocol: string, version: number, sdkVersion: string) {\n  const os = getJavascriptOS();\n  const id = getJavascriptID();\n  return [[protocol, version].join(\"-\"), [SDK_TYPE, sdkVersion].join(\"-\"), os, id].join(\"/\");\n}\nconsole;\n\nexport function formatRelayRpcUrl({\n  protocol,\n  version,\n  relayUrl,\n  sdkVersion,\n  auth,\n  projectId,\n  useOnCloseEvent,\n  bundleId,\n  packageName,\n}: RelayerTypes.RpcUrlParams) {\n  const splitUrl = relayUrl.split(\"?\");\n  const ua = formatUA(protocol, version, sdkVersion);\n  const params = {\n    auth,\n    ua,\n    projectId,\n    useOnCloseEvent: useOnCloseEvent || undefined,\n    packageName: packageName || undefined,\n    bundleId: bundleId || undefined,\n  };\n  const queryString = appendToQueryString(splitUrl[1] || \"\", params);\n  return splitUrl[0] + \"?\" + queryString;\n}\n\nexport function getHttpUrl(url: string) {\n  // regex from https://stackoverflow.com/questions/3883871/regexp-to-grab-protocol-from-url\n  const matches = url.match(/^[^:]+(?=:\\/\\/)/gi) || [];\n  let protocol = matches[0];\n  const domain = typeof protocol !== \"undefined\" ? url.split(\"://\")[1] : url;\n  protocol = protocol === \"wss\" ? \"https\" : \"http\";\n  return [protocol, domain].join(\"://\");\n}\n\n// -- assert ------------------------------------------------- //\n\nexport function assertType(obj: any, key: string, type: string) {\n  if (!obj[key] || typeof obj[key] !== type) {\n    throw new Error(`Missing or invalid \"${key}\" param`);\n  }\n}\n\n// -- context ------------------------------------------------- //\n\nexport function parseContextNames(context: string, depth = DEFAULT_DEPTH) {\n  return getLastItems(context.split(SLASH), depth);\n}\n\nexport function formatMessageContext(context: string): string {\n  return parseContextNames(context).join(EMPTY_SPACE);\n}\n\n// -- array ------------------------------------------------- //\n\nexport function hasOverlap(a: any[], b: any[]): boolean {\n  const matches = a.filter((x) => b.includes(x));\n  return matches.length === a.length;\n}\n\nexport function getLastItems(arr: any[], depth = DEFAULT_DEPTH): any[] {\n  return arr.slice(Math.max(arr.length - depth, 0));\n}\n\n// -- map ------------------------------------------------- //\n\nexport function mapToObj<T = any>(map: Map<string, T>): Record<string, T> {\n  return Object.fromEntries(map.entries());\n}\n\nexport function objToMap<T = any>(obj: Record<string, T>): Map<string, T> {\n  return new Map<string, T>(Object.entries<T>(obj));\n}\n\nexport function mapEntries<A = any, B = any>(\n  obj: Record<string, A>,\n  cb: (x: A) => B,\n): Record<string, B> {\n  const res = {};\n  Object.keys(obj).forEach((key) => {\n    res[key] = cb(obj[key]);\n  });\n  return res;\n}\n\n// -- enum ------------------------------------------------- //\n\n// source: https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275\nexport const enumify = <T extends { [index: string]: U }, U extends string>(x: T): T => x;\n\n// -- string ------------------------------------------------- //\n\nexport function capitalizeWord(word: string) {\n  return word.trim().replace(/^\\w/, (c) => c.toUpperCase());\n}\n\nexport function capitalize(str: string) {\n  return str\n    .split(EMPTY_SPACE)\n    .map((w) => capitalizeWord(w))\n    .join(EMPTY_SPACE);\n}\n\n// -- promises --------------------------------------------- //\nexport function createDelayedPromise<T>(\n  expiry: number = FIVE_MINUTES,\n  expireErrorMessage?: string,\n) {\n  const timeout = toMiliseconds(expiry || FIVE_MINUTES);\n  let cacheResolve: undefined | ((value: T | PromiseLike<T>) => void);\n  let cacheReject: undefined | ((value?: ErrorResponse) => void);\n  let cacheTimeout: undefined | NodeJS.Timeout;\n  let result: Promise<Awaited<T>> | Promise<T> | undefined;\n\n  const done = () =>\n    new Promise<T>((promiseResolve, promiseReject) => {\n      if (result) {\n        return promiseResolve(result);\n      }\n      cacheTimeout = setTimeout(() => {\n        const err = new Error(expireErrorMessage);\n        result = Promise.reject(err);\n        promiseReject(err);\n      }, timeout);\n      cacheResolve = promiseResolve;\n      cacheReject = promiseReject;\n    });\n  const resolve = (value?: T) => {\n    if (cacheTimeout && cacheResolve) {\n      clearTimeout(cacheTimeout);\n      cacheResolve(value as T);\n      result = Promise.resolve(value) as Promise<Awaited<T>>;\n    }\n  };\n  const reject = (value?: ErrorResponse) => {\n    if (cacheTimeout && cacheReject) {\n      clearTimeout(cacheTimeout);\n      cacheReject(value);\n    }\n  };\n\n  return {\n    resolve,\n    reject,\n    done,\n  };\n}\n\nexport function createExpiringPromise<T>(\n  promise: Promise<T>,\n  expiry: number,\n  expireErrorMessage?: string,\n) {\n  return new Promise(async (resolve, reject) => {\n    const timeout = setTimeout(() => reject(new Error(expireErrorMessage)), expiry);\n    try {\n      const result = await promise;\n      resolve(result);\n    } catch (error) {\n      reject(error);\n    }\n    clearTimeout(timeout);\n  });\n}\n\n// -- expirer --------------------------------------------- //\n\nexport function formatExpirerTarget(type: \"topic\" | \"id\", value: string | number): string {\n  if (typeof value === \"string\" && value.startsWith(`${type}:`)) return value;\n  if (type.toLowerCase() === \"topic\") {\n    if (typeof value !== \"string\")\n      throw new Error(`Value must be \"string\" for expirer target type: topic`);\n    return `topic:${value}`;\n  } else if (type.toLowerCase() === \"id\") {\n    if (typeof value !== \"number\")\n      throw new Error(`Value must be \"number\" for expirer target type: id`);\n    return `id:${value}`;\n  }\n  throw new Error(`Unknown expirer target type: ${type}`);\n}\n\nexport function formatTopicTarget(topic: string): string {\n  return formatExpirerTarget(\"topic\", topic);\n}\n\nexport function formatIdTarget(id: number): string {\n  return formatExpirerTarget(\"id\", id);\n}\n\nexport function parseExpirerTarget(target: string) {\n  const [type, value] = target.split(\":\");\n  const parsed: { id?: number; topic?: string } = { id: undefined, topic: undefined };\n  if (type === \"topic\" && typeof value === \"string\") {\n    parsed.topic = value;\n  } else if (type === \"id\" && Number.isInteger(Number(value))) {\n    parsed.id = Number(value);\n  } else {\n    throw new Error(`Invalid target, expected id:number or topic:string, got ${type}:${value}`);\n  }\n\n  return parsed;\n}\n\nexport function calcExpiry(ttl: number, now?: number): number {\n  return fromMiliseconds((now || Date.now()) + toMiliseconds(ttl));\n}\n\nexport function isExpired(expiry: number) {\n  return Date.now() >= toMiliseconds(expiry);\n}\n\n// -- events ---------------------------------------------- //\n\nexport function engineEvent(event: EngineTypes.Event, id?: number | string | undefined) {\n  return `${event}${id ? `:${id}` : \"\"}`;\n}\n\nexport function mergeArrays<T>(a: T[] = [], b: T[] = []): T[] {\n  return [...new Set([...a, ...b])];\n}\n\nexport async function handleDeeplinkRedirect({\n  id,\n  topic,\n  wcDeepLink,\n}: {\n  id: number;\n  topic: string;\n  wcDeepLink: string;\n}) {\n  try {\n    if (!wcDeepLink) return;\n\n    const json = typeof wcDeepLink === \"string\" ? JSON.parse(wcDeepLink) : wcDeepLink;\n    const deeplink = json?.href;\n    if (typeof deeplink !== \"string\") return;\n    const link = formatDeeplinkUrl(deeplink, id, topic);\n    const env = getEnvironment();\n\n    if (env === ENV_MAP.browser) {\n      if (!getDocument()?.hasFocus()) {\n        console.warn(\"Document does not have focus, skipping deeplink.\");\n        return;\n      }\n\n      openDeeplink(link);\n    } else if (env === ENV_MAP.reactNative) {\n      // global.Linking is set by react-native-compat\n      if (typeof (global as any)?.Linking !== \"undefined\") {\n        await (global as any).Linking.openURL(link);\n      }\n    }\n  } catch (err) {\n    // Silent error, just log in console\n    // eslint-disable-next-line no-console\n    console.error(err);\n  }\n}\n\nexport function formatDeeplinkUrl(deeplink: string, requestId: number, sessionTopic: string) {\n  const payload = `requestId=${requestId}&sessionTopic=${sessionTopic}`;\n  if (deeplink.endsWith(\"/\")) deeplink = deeplink.slice(0, -1);\n  let link = `${deeplink}`;\n  if (deeplink.startsWith(\"https://t.me\")) {\n    const startApp = deeplink.includes(\"?\") ? \"&startapp=\" : \"?startapp=\";\n    link = `${link}${startApp}${toBase64(payload, true)}`;\n  } else {\n    link = `${link}/wc?${payload}`;\n  }\n  return link;\n}\n\nexport function openDeeplink(url: string) {\n  let target = \"_self\";\n  if (isIframe()) {\n    target = \"_top\";\n  } else if (isTelegram() || url.startsWith(\"https://\") || url.startsWith(\"http://\")) {\n    target = \"_blank\";\n  }\n\n  window.open(url, target, \"noreferrer noopener\");\n}\n\nexport async function getDeepLink(storage: IKeyValueStorage, key: string) {\n  let link: string | undefined = \"\";\n  try {\n    if (isBrowser()) {\n      link = localStorage.getItem(key) as string;\n      if (link) return link;\n    }\n    link = await storage.getItem(key);\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n  }\n  return link;\n}\n\nexport function getCommonValuesInArrays<T = string | number | boolean>(arr1: T[], arr2: T[]): T[] {\n  return arr1.filter((value) => arr2.includes(value));\n}\n\nexport function getSearchParamFromURL(url: string, param: any) {\n  const include = url.includes(param);\n  if (!include) return null;\n  const params = url.split(/([&,?,=])/);\n  const index = params.indexOf(param);\n  const value = params[index + 2];\n  return value;\n}\n\nexport function uuidv4() {\n  if (typeof crypto !== \"undefined\" && crypto?.randomUUID) {\n    return crypto.randomUUID();\n  }\n\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/gu, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n\n    return v.toString(16);\n  });\n}\n\nexport function isTestRun() {\n  return typeof process !== \"undefined\" && process.env.IS_VITEST === \"true\";\n}\n\nexport function isTelegram() {\n  return (\n    typeof window !== \"undefined\" &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (Boolean((window as any).TelegramWebviewProxy) ||\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      Boolean((window as any).Telegram) ||\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      Boolean((window as any).TelegramWebviewProxyProto))\n  );\n}\n\nexport function isIframe() {\n  try {\n    return window.self !== window.top;\n  } catch {\n    return false;\n  }\n}\n\nexport function toBase64(input: string, removePadding = false): string {\n  const encoded = Buffer.from(input).toString(\"base64\");\n  return removePadding ? encoded.replace(/[=]/g, \"\") : encoded;\n}\n\nexport function fromBase64(encodedString: string): string {\n  return Buffer.from(encodedString, \"base64\").toString(\"utf-8\");\n}\n\nexport function sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","import { hashMessage } from \"@ethersproject/hash\";\nimport { recoverAddress } from \"@ethersproject/transactions\";\nimport { AuthTypes } from \"@walletconnect/types\";\nimport { parseChainId } from \"./caip\";\nconst DEFAULT_RPC_URL = \"https://rpc.walletconnect.org/v1\";\n\nexport async function verifySignature(\n  address: string,\n  reconstructedMessage: string,\n  cacaoSignature: AuthTypes.CacaoSignature,\n  chainId: string,\n  projectId: string,\n  baseRpcUrl?: string,\n): Promise<boolean> {\n  // Determine if this signature is from an EOA or a contract.\n  switch (cacaoSignature.t) {\n    case \"eip191\":\n      return isValidEip191Signature(address, reconstructedMessage, cacaoSignature.s);\n    case \"eip1271\":\n      return await isValidEip1271Signature(\n        address,\n        reconstructedMessage,\n        cacaoSignature.s,\n        chainId,\n        projectId,\n        baseRpcUrl,\n      );\n      break;\n    default:\n      throw new Error(\n        `verifySignature failed: Attempted to verify CacaoSignature with unknown type: ${cacaoSignature.t}`,\n      );\n  }\n}\n\nexport function isValidEip191Signature(\n  address: string,\n  message: string,\n  signature: string,\n): boolean {\n  const recoveredAddress = recoverAddress(hashMessage(message), signature);\n  return recoveredAddress.toLowerCase() === address.toLowerCase();\n}\n\nexport async function isValidEip1271Signature(\n  address: string,\n  reconstructedMessage: string,\n  signature: string,\n  chainId: string,\n  projectId: string,\n  baseRpcUrl?: string,\n) {\n  const parsedChain = parseChainId(chainId);\n  if (!parsedChain.namespace || !parsedChain.reference) {\n    throw new Error(\n      `isValidEip1271Signature failed: chainId must be in CAIP-2 format, received: ${chainId}`,\n    );\n  }\n  try {\n    const eip1271MagicValue = \"0x1626ba7e\";\n    const dynamicTypeOffset = \"0000000000000000000000000000000000000000000000000000000000000040\";\n    const dynamicTypeLength = \"0000000000000000000000000000000000000000000000000000000000000041\";\n    const nonPrefixedSignature = signature.substring(2);\n    const nonPrefixedHashedMessage = hashMessage(reconstructedMessage).substring(2);\n\n    const data =\n      eip1271MagicValue +\n      nonPrefixedHashedMessage +\n      dynamicTypeOffset +\n      dynamicTypeLength +\n      nonPrefixedSignature;\n    const response = await fetch(\n      `${baseRpcUrl || DEFAULT_RPC_URL}/?chainId=${chainId}&projectId=${projectId}`,\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          id: generateJsonRpcId(),\n          jsonrpc: \"2.0\",\n          method: \"eth_call\",\n          params: [{ to: address, data }, \"latest\"],\n        }),\n      },\n    );\n    const { result } = await response.json();\n    if (!result) return false;\n\n    // Remove right-padded zeros from result to get only the concrete recovered value.\n    const recoveredValue = result.slice(0, eip1271MagicValue.length);\n    return recoveredValue.toLowerCase() === eip1271MagicValue.toLowerCase();\n  } catch (error: any) {\n    // eslint-disable-next-line no-console\n    console.error(\"isValidEip1271Signature: \", error);\n    return false;\n  }\n}\n\nfunction generateJsonRpcId() {\n  return Date.now() + Math.floor(Math.random() * 1000);\n}\n","import { AuthTypes } from \"@walletconnect/types\";\nimport { getCommonValuesInArrays } from \"./misc\";\nimport { verifySignature } from \"./signatures\";\nconst didPrefix = \"did:pkh:\";\nexport const getDidAddressSegments = (iss: string) => {\n  return iss?.split(\":\");\n};\n\nexport const getDidChainId = (iss: string) => {\n  const segments = iss && getDidAddressSegments(iss);\n  if (segments) {\n    return iss.includes(didPrefix) ? segments[3] : segments[1];\n  }\n  return undefined;\n};\n\nexport const getNamespacedDidChainId = (iss: string) => {\n  const segments = iss && getDidAddressSegments(iss);\n  if (segments) {\n    return segments[2] + \":\" + segments[3];\n  }\n  return undefined;\n};\n\nexport const getDidAddress = (iss: string) => {\n  const segments = iss && getDidAddressSegments(iss);\n  if (segments) {\n    return segments.pop();\n  }\n  return undefined;\n};\n\nexport async function validateSignedCacao(params: { cacao: AuthTypes.Cacao; projectId?: string }) {\n  const { cacao, projectId } = params;\n  const { s: signature, p: payload } = cacao;\n  const reconstructed = formatMessage(payload, payload.iss);\n  const walletAddress = getDidAddress(payload.iss) as string;\n  const isValid = await verifySignature(\n    walletAddress,\n    reconstructed,\n    signature,\n    getNamespacedDidChainId(payload.iss) as string,\n    projectId as string,\n  );\n\n  return isValid;\n}\n\nexport const formatMessage = (cacao: AuthTypes.FormatMessageParams, iss: string) => {\n  const header = `${cacao.domain} wants you to sign in with your Ethereum account:`;\n  const walletAddress = getDidAddress(iss);\n\n  if (!cacao.aud && !cacao.uri) {\n    throw new Error(\"Either `aud` or `uri` is required to construct the message\");\n  }\n\n  let statement = cacao.statement || undefined;\n  const uri = `URI: ${cacao.aud || cacao.uri}`;\n  const version = `Version: ${cacao.version}`;\n  const chainId = `Chain ID: ${getDidChainId(iss)}`;\n  const nonce = `Nonce: ${cacao.nonce}`;\n  const issuedAt = `Issued At: ${cacao.iat}`;\n  const expirationTime = cacao.exp ? `Expiration Time: ${cacao.exp}` : undefined;\n  const notBefore = cacao.nbf ? `Not Before: ${cacao.nbf}` : undefined;\n  const requestId = cacao.requestId ? `Request ID: ${cacao.requestId}` : undefined;\n  const resources = cacao.resources\n    ? `Resources:${cacao.resources.map((resource) => `\\n- ${resource}`).join(\"\")}`\n    : undefined;\n  const recap = getRecapFromResources(cacao.resources);\n  if (recap) {\n    const decoded = decodeRecap(recap);\n    statement = formatStatementFromRecap(statement, decoded);\n  }\n\n  const message = [\n    header,\n    walletAddress,\n    ``,\n    statement,\n    ``,\n    uri,\n    version,\n    chainId,\n    nonce,\n    issuedAt,\n    expirationTime,\n    notBefore,\n    requestId,\n    resources,\n  ]\n    .filter((val) => val !== undefined && val !== null) // remove unnecessary empty lines\n    .join(\"\\n\");\n\n  return message;\n};\n\nexport function buildAuthObject(\n  requestPayload: AuthTypes.PayloadParams,\n  signature: AuthTypes.CacaoSignature,\n  iss: string,\n) {\n  if (!iss.includes(\"did:pkh:\")) {\n    iss = `did:pkh:${iss}`;\n  }\n\n  const authObject: AuthTypes.Cacao = {\n    h: {\n      t: \"caip122\",\n    },\n    p: {\n      iss,\n      domain: requestPayload.domain,\n      aud: requestPayload.aud,\n      version: requestPayload.version,\n      nonce: requestPayload.nonce,\n      iat: requestPayload.iat,\n      statement: requestPayload.statement,\n      requestId: requestPayload.requestId,\n      resources: requestPayload.resources,\n      nbf: requestPayload.nbf,\n      exp: requestPayload.exp,\n    },\n    s: signature,\n  };\n  return authObject;\n}\ntype PopulateAuthPayloadParams = {\n  authPayload: AuthTypes.PayloadParams;\n  chains: string[];\n  methods: string[];\n};\nexport function populateAuthPayload(params: PopulateAuthPayloadParams): AuthTypes.PayloadParams {\n  const { authPayload, chains, methods } = params;\n  const statement = authPayload.statement || \"\";\n\n  if (!chains?.length) return authPayload;\n\n  const requested = authPayload.chains;\n  const supported = chains;\n\n  const supportedChains = getCommonValuesInArrays<string>(requested, supported);\n  if (!supportedChains?.length) {\n    throw new Error(\"No supported chains\");\n  }\n\n  const requestedRecaps = getDecodedRecapFromResources(authPayload.resources);\n  if (!requestedRecaps) return authPayload;\n\n  isValidRecap(requestedRecaps);\n  const resource = getRecapResource(requestedRecaps, \"eip155\");\n  let updatedResources = authPayload?.resources || [];\n\n  if (resource?.length) {\n    const actions = getReCapActions(resource);\n    const supportedActions = getCommonValuesInArrays<string>(actions, methods);\n    if (!supportedActions?.length) {\n      throw new Error(\n        `Supported methods don't satisfy the requested: ${JSON.stringify(\n          actions,\n        )}, supported: ${JSON.stringify(methods)}`,\n      );\n    }\n    const formattedActions = assignAbilityToActions(\"request\", supportedActions as string[], {\n      chains: supportedChains,\n    });\n    const updatedRecap = addResourceToRecap(requestedRecaps, \"eip155\", formattedActions);\n    // remove recap from resources as we will add the updated one\n    updatedResources = authPayload?.resources?.slice(0, -1) || [];\n    updatedResources.push(encodeRecap(updatedRecap));\n  }\n\n  return {\n    ...authPayload,\n    statement: buildRecapStatement(statement, getRecapFromResources(updatedResources)),\n    chains: supportedChains,\n    resources: authPayload?.resources || updatedResources.length > 0 ? updatedResources : undefined,\n  };\n}\n\nexport function getDecodedRecapFromResources(resources?: string[]) {\n  const resource = getRecapFromResources(resources);\n  if (!resource) return;\n  if (!isRecap(resource)) return;\n  return decodeRecap(resource);\n}\n\nexport function recapHasResource(recap: any, resource: string) {\n  return recap?.att?.hasOwnProperty(resource);\n}\n\nexport function getRecapResource(recap: any, resource: string): any[] {\n  return recap?.att?.[resource] ? Object.keys(recap?.att?.[resource]) : [];\n}\n\nexport function getRecapAbilitiesFromResource(actions: any[]) {\n  return actions?.map((action) => Object.keys(action)) || [];\n}\n\nexport function getReCapActions(abilities: any[]) {\n  return abilities?.map((ability) => ability.split(\"/\")?.[1]) || [];\n}\n\nexport function base64Encode(input: unknown): string {\n  return Buffer.from(JSON.stringify(input)).toString(\"base64\");\n}\n\nexport function base64Decode(encodedString: string): string {\n  return JSON.parse(Buffer.from(encodedString, \"base64\").toString(\"utf-8\"));\n}\n\nexport function isValidRecap(recap: any) {\n  if (!recap) throw new Error(\"No recap provided, value is undefined\");\n  if (!recap.att) throw new Error(\"No `att` property found\");\n  const resources = Object.keys(recap.att);\n  if (!resources?.length) throw new Error(\"No resources found in `att` property\");\n  resources.forEach((resource) => {\n    const resourceAbilities = recap.att[resource];\n    if (Array.isArray(resourceAbilities))\n      throw new Error(`Resource must be an object: ${resource}`);\n    if (typeof resourceAbilities !== \"object\")\n      throw new Error(`Resource must be an object: ${resource}`);\n    if (!Object.keys(resourceAbilities).length)\n      throw new Error(`Resource object is empty: ${resource}`);\n\n    Object.keys(resourceAbilities).forEach((ability) => {\n      const limits = resourceAbilities[ability];\n      if (!Array.isArray(limits))\n        throw new Error(`Ability limits ${ability} must be an array of objects, found: ${limits}`);\n      if (!limits.length)\n        throw new Error(`Value of ${ability} is empty array, must be an array with objects`);\n      limits.forEach((limit) => {\n        if (typeof limit !== \"object\")\n          throw new Error(\n            `Ability limits (${ability}) must be an array of objects, found: ${limit}`,\n          );\n      });\n    });\n  });\n}\n\nexport function createRecap(resource: string, ability: string, actions: string[], limits = {}) {\n  actions?.sort((a, b) => a.localeCompare(b));\n  return {\n    att: { [resource]: assignAbilityToActions(ability, actions, limits) },\n  };\n}\n\ntype RecapType = {\n  att: {\n    [key: string]: Record<string, unknown>;\n  };\n};\nexport function addResourceToRecap(recap: RecapType, resource: string, actions: unknown[]) {\n  recap.att[resource] = {\n    ...actions,\n  };\n  const keys = Object.keys(recap.att)?.sort((a, b) => a.localeCompare(b));\n  const sorted = keys.reduce(\n    (obj, key) => {\n      obj.att[key] = recap.att[key];\n      return obj;\n    },\n    { att: {} },\n  );\n  return sorted;\n}\n\nexport function assignAbilityToActions(ability: string, actions: string[], limits = {}) {\n  // sort resources alphabetically\n  actions = actions?.sort((a, b) => a.localeCompare(b));\n  const abilities = actions.map((action) => {\n    return {\n      [`${ability}/${action}`]: [limits],\n    };\n  });\n  return Object.assign({}, ...abilities);\n}\n\nexport function encodeRecap(recap: any) {\n  isValidRecap(recap);\n  // remove the padding from the base64 string as per recap spec\n  return `urn:recap:${base64Encode(recap).replace(/=/g, \"\")}`;\n}\n\nexport function decodeRecap(recap: any): RecapType {\n  // base64Decode adds padding internally so don't need to add it back if it was removed\n  const decoded = base64Decode(recap.replace(\"urn:recap:\", \"\"));\n  isValidRecap(decoded);\n  return decoded as unknown as RecapType;\n}\n\nexport function createEncodedRecap(resource: string, ability: string, actions: string[]): string {\n  const recap = createRecap(resource, ability, actions);\n  return encodeRecap(recap);\n}\n\nexport function isRecap(resource: string) {\n  return resource && resource.includes(\"urn:recap:\");\n}\n\nexport function mergeEncodedRecaps(recap1: string, recap2: string) {\n  const decoded1 = decodeRecap(recap1);\n  const decoded2 = decodeRecap(recap2);\n  const merged = mergeRecaps(decoded1, decoded2);\n  return encodeRecap(merged);\n}\n\nexport function mergeRecaps(recap1: RecapType, recap2: RecapType) {\n  isValidRecap(recap1);\n  isValidRecap(recap2);\n  const keys = Object.keys(recap1.att)\n    .concat(Object.keys(recap2.att))\n    .sort((a, b) => a.localeCompare(b));\n  const mergedRecap = { att: {} };\n  keys.forEach((key) => {\n    const actions = Object.keys(recap1.att?.[key] || {})\n      .concat(Object.keys(recap2.att?.[key] || {}))\n      .sort((a, b) => a.localeCompare(b));\n    actions.forEach((action) => {\n      mergedRecap.att[key] = {\n        ...mergedRecap.att[key],\n        [action]: recap1.att[key]?.[action] || recap2.att[key]?.[action],\n      };\n    });\n  });\n  return mergedRecap;\n}\n\nexport function formatStatementFromRecap(statement = \"\", recap: RecapType) {\n  isValidRecap(recap);\n  const base = \"I further authorize the stated URI to perform the following actions on my behalf: \";\n\n  if (statement.includes(base)) return statement;\n\n  const statementForRecap: string[] = [];\n  let currentCounter = 0;\n  Object.keys(recap.att).forEach((resource) => {\n    const actions = Object.keys(recap.att[resource]).map((ability: any) => {\n      return {\n        ability: ability.split(\"/\")[0],\n        action: ability.split(\"/\")[1],\n      };\n    });\n    //\n    actions.sort((a, b) => a.action.localeCompare(b.action));\n    const uniqueAbilities = {};\n    actions.forEach((action: any) => {\n      if (!uniqueAbilities[action.ability]) {\n        uniqueAbilities[action.ability] = [];\n      }\n      uniqueAbilities[action.ability].push(action.action);\n    });\n    const abilities = Object.keys(uniqueAbilities).map((ability) => {\n      currentCounter++;\n      return `(${currentCounter}) '${ability}': '${uniqueAbilities[ability].join(\n        \"', '\",\n      )}' for '${resource}'.`;\n    });\n    statementForRecap.push(abilities.join(\", \").replace(\".,\", \".\"));\n  });\n\n  const recapStatemet = statementForRecap.join(\" \");\n  const recapStatement = `${base}${recapStatemet}`;\n  // add a space if there is a statement\n  return `${statement ? statement + \" \" : \"\"}${recapStatement}`;\n}\n\nexport function getMethodsFromRecap(recap: string) {\n  const decoded = decodeRecap(recap);\n  isValidRecap(decoded);\n  // methods are only available for eip155 as per the current implementation\n  const resource = decoded.att?.eip155;\n  if (!resource) return [];\n  return Object.keys(resource).map((ability: any) => ability.split(\"/\")[1]);\n}\n\nexport function getChainsFromRecap(recap: string) {\n  const decoded = decodeRecap(recap);\n  isValidRecap(decoded);\n  const chains: string[] = [];\n\n  Object.values(decoded.att).forEach((resource: any) => {\n    Object.values(resource).forEach((ability: any) => {\n      if (ability?.[0]?.chains) {\n        chains.push(ability[0].chains);\n      }\n    });\n  });\n  return [...new Set(chains.flat())];\n}\n\nexport function buildRecapStatement(statement: string, recap: unknown) {\n  if (!recap) return statement;\n  const decoded = decodeRecap(recap);\n  isValidRecap(decoded);\n  return formatStatementFromRecap(statement, decoded);\n}\n\nexport function getRecapFromResources(resources?: string[]) {\n  if (!resources) return;\n  // per spec, recap is always the last resource\n  const resource = resources?.[resources.length - 1];\n  return isRecap(resource) ? resource : undefined;\n}\n","import { ChaCha20Poly1305 } from \"@stablelib/chacha20poly1305\";\nimport { HKDF } from \"@stablelib/hkdf\";\nimport { randomBytes } from \"@stablelib/random\";\nimport { hash, SHA256 } from \"@stablelib/sha256\";\nimport * as x25519 from \"@stablelib/x25519\";\nimport { CryptoTypes } from \"@walletconnect/types\";\nimport { concat, fromString, toString } from \"uint8arrays\";\nimport { ec as EC } from \"elliptic\";\nimport { decodeJWT } from \"@walletconnect/relay-auth\";\n\nexport const BASE10 = \"base10\";\nexport const BASE16 = \"base16\";\nexport const BASE64 = \"base64pad\";\nexport const BASE64URL = \"base64url\";\nexport const UTF8 = \"utf8\";\n\nexport const TYPE_0 = 0;\nexport const TYPE_1 = 1;\nexport const TYPE_2 = 2;\n\nexport type P256KeyDataType = {\n  crv: \"P-256\";\n  ext: true;\n  key_ops: [\"verify\"];\n  kty: string;\n  x: string;\n  y: string;\n};\n\nconst ZERO_INDEX = 0;\nconst TYPE_LENGTH = 1;\nconst IV_LENGTH = 12;\nconst KEY_LENGTH = 32;\n\nexport function generateKeyPair(): CryptoTypes.KeyPair {\n  const keyPair = x25519.generateKeyPair();\n  return {\n    privateKey: toString(keyPair.secretKey, BASE16),\n    publicKey: toString(keyPair.publicKey, BASE16),\n  };\n}\n\nexport function generateRandomBytes32(): string {\n  const random = randomBytes(KEY_LENGTH);\n  return toString(random, BASE16);\n}\n\nexport function deriveSymKey(privateKeyA: string, publicKeyB: string): string {\n  const sharedKey = x25519.sharedKey(\n    fromString(privateKeyA, BASE16),\n    fromString(publicKeyB, BASE16),\n    true,\n  );\n  const hkdf = new HKDF(SHA256, sharedKey);\n  const symKey = hkdf.expand(KEY_LENGTH);\n  return toString(symKey, BASE16);\n}\n\nexport function hashKey(key: string): string {\n  const result = hash(fromString(key, BASE16));\n  return toString(result, BASE16);\n}\n\nexport function hashMessage(message: string): string {\n  const result = hash(fromString(message, UTF8));\n  return toString(result, BASE16);\n}\n\nexport function encodeTypeByte(type: number): Uint8Array {\n  return fromString(`${type}`, BASE10);\n}\n\nexport function decodeTypeByte(byte: Uint8Array): number {\n  return Number(toString(byte, BASE10));\n}\n\nexport function encrypt(params: CryptoTypes.EncryptParams): string {\n  const type = encodeTypeByte(typeof params.type !== \"undefined\" ? params.type : TYPE_0);\n  if (decodeTypeByte(type) === TYPE_1 && typeof params.senderPublicKey === \"undefined\") {\n    throw new Error(\"Missing sender public key for type 1 envelope\");\n  }\n  const senderPublicKey =\n    typeof params.senderPublicKey !== \"undefined\"\n      ? fromString(params.senderPublicKey, BASE16)\n      : undefined;\n\n  const iv =\n    typeof params.iv !== \"undefined\" ? fromString(params.iv, BASE16) : randomBytes(IV_LENGTH);\n  const box = new ChaCha20Poly1305(fromString(params.symKey, BASE16));\n  const sealed = box.seal(iv, fromString(params.message, UTF8));\n  return serialize({ type, sealed, iv, senderPublicKey, encoding: params.encoding });\n}\n\nexport function encodeTypeTwoEnvelope(\n  message: string,\n  encoding?: CryptoTypes.EncodingType,\n): string {\n  const type = encodeTypeByte(TYPE_2);\n  // iv is not used in type 2 envelopes\n  const iv = randomBytes(IV_LENGTH);\n  const sealed = fromString(message, UTF8);\n  return serialize({ type, sealed, iv, encoding });\n}\n\nexport function decrypt(params: CryptoTypes.DecryptParams): string {\n  const box = new ChaCha20Poly1305(fromString(params.symKey, BASE16));\n  const { sealed, iv } = deserialize({ encoded: params.encoded, encoding: params?.encoding });\n  const message = box.open(iv, sealed);\n  if (message === null) throw new Error(\"Failed to decrypt\");\n  return toString(message, UTF8);\n}\n\nexport function decodeTypeTwoEnvelope(\n  encoded: string,\n  encoding?: CryptoTypes.EncodingType,\n): string {\n  const { sealed } = deserialize({ encoded, encoding });\n  return toString(sealed, UTF8);\n}\n\nexport function serialize(params: CryptoTypes.EncodingParams): string {\n  const { encoding = BASE64 } = params;\n\n  if (decodeTypeByte(params.type) === TYPE_2) {\n    return toString(concat([params.type, params.sealed]), encoding);\n  }\n  if (decodeTypeByte(params.type) === TYPE_1) {\n    if (typeof params.senderPublicKey === \"undefined\") {\n      throw new Error(\"Missing sender public key for type 1 envelope\");\n    }\n    return toString(\n      concat([params.type, params.senderPublicKey, params.iv, params.sealed]),\n      encoding,\n    );\n  }\n  // default to type 0 envelope\n  return toString(concat([params.type, params.iv, params.sealed]), encoding);\n}\n\nexport function deserialize(params: CryptoTypes.DecodingParams): CryptoTypes.EncodingParams {\n  const { encoded, encoding = BASE64 } = params;\n  const bytes = fromString(encoded, encoding);\n  const type = bytes.slice(ZERO_INDEX, TYPE_LENGTH);\n  const slice1 = TYPE_LENGTH;\n  if (decodeTypeByte(type) === TYPE_1) {\n    const slice2 = slice1 + KEY_LENGTH;\n    const slice3 = slice2 + IV_LENGTH;\n    const senderPublicKey = bytes.slice(slice1, slice2);\n    const iv = bytes.slice(slice2, slice3);\n    const sealed = bytes.slice(slice3);\n    return { type, sealed, iv, senderPublicKey };\n  }\n  if (decodeTypeByte(type) === TYPE_2) {\n    const sealed = bytes.slice(slice1);\n    // iv is not used in type 2 envelopes\n    const iv = randomBytes(IV_LENGTH);\n    return { type, sealed, iv };\n  }\n  // default to type 0 envelope\n  const slice2 = slice1 + IV_LENGTH;\n  const iv = bytes.slice(slice1, slice2);\n  const sealed = bytes.slice(slice2);\n  return { type, sealed, iv };\n}\n\nexport function validateDecoding(\n  encoded: string,\n  opts?: CryptoTypes.DecodeOptions,\n): CryptoTypes.EncodingValidation {\n  const deserialized = deserialize({ encoded, encoding: opts?.encoding });\n  return validateEncoding({\n    type: decodeTypeByte(deserialized.type),\n    senderPublicKey:\n      typeof deserialized.senderPublicKey !== \"undefined\"\n        ? toString(deserialized.senderPublicKey, BASE16)\n        : undefined,\n    receiverPublicKey: opts?.receiverPublicKey,\n  });\n}\n\nexport function validateEncoding(opts?: CryptoTypes.EncodeOptions): CryptoTypes.EncodingValidation {\n  const type = opts?.type || TYPE_0;\n  if (type === TYPE_1) {\n    if (typeof opts?.senderPublicKey === \"undefined\") {\n      throw new Error(\"missing sender public key\");\n    }\n    if (typeof opts?.receiverPublicKey === \"undefined\") {\n      throw new Error(\"missing receiver public key\");\n    }\n  }\n  return {\n    type,\n    senderPublicKey: opts?.senderPublicKey,\n    receiverPublicKey: opts?.receiverPublicKey,\n  };\n}\n\nexport function isTypeOneEnvelope(\n  result: CryptoTypes.EncodingValidation,\n): result is CryptoTypes.TypeOneParams {\n  return (\n    result.type === TYPE_1 &&\n    typeof result.senderPublicKey === \"string\" &&\n    typeof result.receiverPublicKey === \"string\"\n  );\n}\n\nexport function isTypeTwoEnvelope(\n  result: CryptoTypes.EncodingValidation,\n): result is CryptoTypes.TypeOneParams {\n  return result.type === TYPE_2;\n}\nexport function getCryptoKeyFromKeyData(keyData: P256KeyDataType): EC.KeyPair {\n  const ec = new EC(\"p256\");\n  const key = ec.keyFromPublic(\n    {\n      x: Buffer.from(keyData.x, \"base64\").toString(\"hex\"),\n      y: Buffer.from(keyData.y, \"base64\").toString(\"hex\"),\n    },\n    \"hex\",\n  );\n  return key;\n}\n\nfunction base64UrlToBase64(base64Url: string) {\n  let base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  const padding = base64.length % 4;\n  if (padding > 0) {\n    base64 += \"=\".repeat(4 - padding);\n  }\n  return base64;\n}\n\nfunction base64UrlDecode(base64Url: string) {\n  return Buffer.from(base64UrlToBase64(base64Url), \"base64\");\n}\n\nexport function verifyP256Jwt<T>(token: string, keyData: P256KeyDataType) {\n  const [headerBase64Url, payloadBase64Url, signatureBase64Url] = token.split(\".\");\n\n  // Decode the signature\n  const signatureBuffer = base64UrlDecode(signatureBase64Url);\n\n  // Check if signature length is correct (64 bytes for P-256)\n  if (signatureBuffer.length !== 64) {\n    throw new Error(\"Invalid signature length\");\n  }\n\n  // Extract r and s from the signature\n  const r = signatureBuffer.slice(0, 32).toString(\"hex\");\n  const s = signatureBuffer.slice(32, 64).toString(\"hex\");\n\n  // Create the signing input\n  const signingInput = `${headerBase64Url}.${payloadBase64Url}`;\n\n  const sha256 = new SHA256();\n  const buffer = sha256.update(Buffer.from(signingInput)).digest();\n\n  const key = getCryptoKeyFromKeyData(keyData);\n\n  // Convert the hash to hex format\n  const hashHex = Buffer.from(buffer).toString(\"hex\");\n\n  // Verify the signature\n  const isValid = key.verify(hashHex, { r, s });\n\n  if (!isValid) {\n    throw new Error(\"Invalid signature\");\n  }\n  const data = decodeJWT(token) as unknown as { payload: T };\n  return data.payload;\n}\n","import { RELAY_JSONRPC } from \"@walletconnect/relay-api\";\nimport { RelayerTypes } from \"@walletconnect/types\";\n\nexport const RELAYER_DEFAULT_PROTOCOL = \"irn\";\n\nexport function getRelayProtocolName(\n  opts?: RelayerTypes.RequestOptions,\n): RelayerTypes.ProtocolOptions {\n  return opts?.relay || { protocol: RELAYER_DEFAULT_PROTOCOL };\n}\n\nexport function getRelayProtocolApi(protocol: string) {\n  const jsonrpc = RELAY_JSONRPC[protocol];\n  if (typeof jsonrpc === \"undefined\") {\n    throw new Error(`Relay Protocol not supported: ${protocol}`);\n  }\n  return jsonrpc;\n}\n","import { EngineTypes, RelayerTypes } from \"@walletconnect/types\";\nimport { fromBase64 } from \"./misc\";\n\n// -- uri -------------------------------------------------- //\n\nexport function parseRelayParams(params: any, delimiter = \"-\"): RelayerTypes.ProtocolOptions {\n  const relay: any = {};\n  const prefix = \"relay\" + delimiter;\n  Object.keys(params).forEach((key) => {\n    if (key.startsWith(prefix)) {\n      const name = key.replace(prefix, \"\");\n      const value = params[key];\n      relay[name] = value;\n    }\n  });\n  return relay;\n}\n\nexport function parseUri(str: string): EngineTypes.UriParameters {\n  if (!str.includes(\"wc:\")) {\n    const parsed = fromBase64(str);\n    if (parsed?.includes(\"wc:\")) {\n      str = parsed;\n    }\n  }\n\n  // remove android schema prefix\n  str = str.includes(\"wc://\") ? str.replace(\"wc://\", \"\") : str;\n  // remove ios schema prefix\n  str = str.includes(\"wc:\") ? str.replace(\"wc:\", \"\") : str;\n  const pathStart: number = str.indexOf(\":\");\n  const pathEnd: number | undefined = str.indexOf(\"?\") !== -1 ? str.indexOf(\"?\") : undefined;\n  const protocol: string = str.substring(0, pathStart);\n  const path: string = str.substring(pathStart + 1, pathEnd);\n  const requiredValues = path.split(\"@\");\n  const queryString: string = typeof pathEnd !== \"undefined\" ? str.substring(pathEnd) : \"\";\n  const urlSearchParams = new URLSearchParams(queryString);\n  const queryParams: Record<string, string> = {};\n  urlSearchParams.forEach((value, key) => {\n    queryParams[key] = value;\n  });\n  const methods =\n    typeof queryParams.methods === \"string\" ? queryParams.methods.split(\",\") : undefined;\n  const result = {\n    protocol,\n    topic: parseTopic(requiredValues[0]),\n    version: parseInt(requiredValues[1], 10),\n    symKey: queryParams.symKey as string,\n    relay: parseRelayParams(queryParams),\n    methods,\n    expiryTimestamp: queryParams.expiryTimestamp\n      ? parseInt(queryParams.expiryTimestamp as string, 10)\n      : undefined,\n  };\n  return result;\n}\n\nexport function parseTopic(topic: string): string {\n  return topic.startsWith(\"//\") ? topic.substring(2) : topic;\n}\n\nexport function formatRelayParams(relay: RelayerTypes.ProtocolOptions, delimiter = \"-\") {\n  const prefix = \"relay\";\n  const params: any = {};\n  Object.keys(relay).forEach((key) => {\n    const k = prefix + delimiter + key;\n    if (relay[key]) {\n      params[k] = relay[key];\n    }\n  });\n  return params;\n}\n\nexport function formatUri(params: EngineTypes.UriParameters): string {\n  const urlSearchParams = new URLSearchParams();\n\n  const relayParams = formatRelayParams(params.relay);\n  Object.keys(relayParams)\n    .sort()\n    .forEach((key) => {\n      urlSearchParams.set(key, relayParams[key]);\n    });\n\n  urlSearchParams.set(\"symKey\", params.symKey);\n  if (params.expiryTimestamp)\n    urlSearchParams.set(\"expiryTimestamp\", params.expiryTimestamp.toString());\n\n  if (params.methods) {\n    urlSearchParams.set(\"methods\", params.methods.join(\",\"));\n  }\n\n  const queryString = urlSearchParams.toString();\n  return `${params.protocol}:${params.topic}@${params.version}?${queryString}`;\n}\n\nexport function getLinkModeURL(\n  universalLink: string,\n  topic: string,\n  encodedEnvelope: string,\n): string {\n  return `${universalLink}?wc_ev=${encodedEnvelope}&topic=${topic}`;\n}\n","import { ProposalTypes, SessionTypes } from \"@walletconnect/types\";\nimport { mergeArrays } from \"./misc\";\nimport { isConformingNamespaces, isValidNamespaces, isValidObject } from \"./validators\";\n\nexport function getAccountsChains(accounts: SessionTypes.Namespace[\"accounts\"]) {\n  const chains: string[] = [];\n  accounts.forEach((account) => {\n    const [chain, chainId] = account.split(\":\");\n    chains.push(`${chain}:${chainId}`);\n  });\n\n  return chains;\n}\n\nexport function getNamespacesChains(namespaces: SessionTypes.Namespaces) {\n  const chains: string[] = [];\n  Object.values(namespaces).forEach((namespace) => {\n    chains.push(...getAccountsChains(namespace.accounts));\n  });\n\n  return chains;\n}\n\nexport function getNamespacesMethodsForChainId(\n  namespaces: SessionTypes.Namespaces,\n  chainId: string,\n) {\n  const methods: SessionTypes.Namespace[\"methods\"] = [];\n  Object.values(namespaces).forEach((namespace) => {\n    const chains = getAccountsChains(namespace.accounts);\n    if (chains.includes(chainId)) methods.push(...namespace.methods);\n  });\n\n  return methods;\n}\n\nexport function getNamespacesEventsForChainId(\n  namespaces: SessionTypes.Namespaces,\n  chainId: string,\n) {\n  const events: SessionTypes.Namespace[\"events\"] = [];\n  Object.values(namespaces).forEach((namespace) => {\n    const chains = getAccountsChains(namespace.accounts);\n    if (chains.includes(chainId)) events.push(...namespace.events);\n  });\n\n  return events;\n}\n\nexport function getRequiredNamespacesFromNamespaces(\n  namespaces: SessionTypes.Namespaces,\n  caller: string,\n): ProposalTypes.RequiredNamespaces {\n  const validNamespacesError = isValidNamespaces(namespaces, caller);\n  if (validNamespacesError) throw new Error(validNamespacesError.message);\n\n  const required = {};\n  for (const [namespace, values] of Object.entries(namespaces)) {\n    required[namespace] = {\n      methods: values.methods,\n      events: values.events,\n      chains: values.accounts.map((account) => `${account.split(\":\")[0]}:${account.split(\":\")[1]}`),\n    };\n  }\n  return required;\n}\n\nexport type BuildApprovedNamespacesParams = {\n  proposal: ProposalTypes.Struct;\n  supportedNamespaces: Record<\n    string,\n    { chains: string[]; methods: string[]; events: string[]; accounts: string[] }\n  >;\n};\n\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\nexport function buildApprovedNamespaces(\n  params: BuildApprovedNamespacesParams,\n): SessionTypes.Namespaces {\n  const {\n    proposal: { requiredNamespaces, optionalNamespaces = {} },\n    supportedNamespaces,\n  } = params;\n  const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n  const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n\n  // build approved namespaces\n  const namespaces = {};\n  Object.keys(supportedNamespaces).forEach((namespace) => {\n    const supportedChains = supportedNamespaces[namespace].chains;\n    const supportedMethods = supportedNamespaces[namespace].methods;\n    const supportedEvents = supportedNamespaces[namespace].events;\n    const supportedAccounts = supportedNamespaces[namespace].accounts;\n\n    supportedChains.forEach((chain) => {\n      if (!supportedAccounts.some((account) => account.includes(chain))) {\n        throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n      }\n    });\n\n    namespaces[namespace] = {\n      chains: supportedChains,\n      methods: supportedMethods,\n      events: supportedEvents,\n      accounts: supportedAccounts,\n    };\n  });\n\n  // verify all required namespaces are supported\n  const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n  if (err) throw new Error(err.message);\n\n  const approvedNamespaces = {};\n\n  // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n  if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n    return namespaces;\n\n  // assign accounts for the required namespaces\n  Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n    const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n      normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n    );\n    const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n      normalizedRequired[requiredNamespace]?.methods?.includes(method),\n    );\n    const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n      normalizedRequired[requiredNamespace]?.events?.includes(event),\n    );\n\n    const accounts = chains\n      .map((chain: string) =>\n        supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n          account.includes(`${chain}:`),\n        ),\n      )\n      .flat();\n\n    approvedNamespaces[requiredNamespace] = {\n      chains,\n      methods,\n      events,\n      accounts,\n    };\n  });\n\n  // add optional namespaces\n  Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n    if (!supportedNamespaces[optionalNamespace]) return;\n\n    const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n      supportedNamespaces[optionalNamespace].chains.includes(chain),\n    );\n    const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n      normalizedOptional[optionalNamespace]?.methods?.includes(method),\n    );\n    const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n      normalizedOptional[optionalNamespace]?.events?.includes(event),\n    );\n\n    const accountsToAdd = chainsToAdd\n      ?.map((chain: string) =>\n        supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n          account.includes(`${chain}:`),\n        ),\n      )\n      .flat();\n\n    approvedNamespaces[optionalNamespace] = {\n      chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n      methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n      events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n      accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n    };\n  });\n\n  return approvedNamespaces;\n}\n\nexport function isCaipNamespace(namespace: string): boolean {\n  return namespace.includes(\":\");\n}\n\nexport function parseNamespaceKey(namespace: string) {\n  return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\nexport function normalizeNamespaces(\n  namespaces: ProposalTypes.RequiredNamespaces,\n): ProposalTypes.RequiredNamespaces {\n  const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n  if (!isValidObject(namespaces)) return normalizedNamespaces;\n  for (const [key, values] of Object.entries(namespaces)) {\n    const chains = isCaipNamespace(key) ? [key] : values.chains;\n    const methods = values.methods || [];\n    const events = values.events || [];\n    const normalizedKey = parseNamespaceKey(key);\n    normalizedNamespaces[normalizedKey] = {\n      ...normalizedNamespaces[normalizedKey],\n      chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n      methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n      events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n    };\n  }\n  return normalizedNamespaces;\n}\n\nexport function getNamespacesFromAccounts(accounts: string[]) {\n  const namespaces = {};\n  accounts?.forEach((account) => {\n    const [namespace, chainId] = account.split(\":\");\n    if (!namespaces[namespace]) {\n      namespaces[namespace] = {\n        accounts: [],\n        chains: [],\n        events: [],\n      };\n    }\n    namespaces[namespace].accounts.push(account);\n    namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n  });\n\n  return namespaces;\n}\n\nexport function buildNamespacesFromAuth(methods: string[], accounts: string[]) {\n  accounts = accounts.map((account) => account.replace(\"did:pkh:\", \"\"));\n\n  const namespaces = getNamespacesFromAccounts(accounts);\n\n  for (const [_, values] of Object.entries(namespaces) as [string, SessionTypes.Namespace][]) {\n    if (!values.methods) {\n      values.methods = methods;\n    } else {\n      values.methods = mergeArrays(values.methods, methods);\n    }\n    values.events = [\"chainChanged\", \"accountsChanged\"];\n  }\n  return namespaces;\n}\n","/**\n * Types\n */\nexport type SdkErrorKey = keyof typeof SDK_ERRORS;\nexport type InternalErrorKey = keyof typeof INTERNAL_ERRORS;\n\n/**\n * Constants\n */\nexport const SDK_ERRORS = {\n  /* ----- INVALID (1xxx) ----- */\n  INVALID_METHOD: {\n    message: \"Invalid method.\",\n    code: 1001,\n  },\n  INVALID_EVENT: {\n    message: \"Invalid event.\",\n    code: 1002,\n  },\n  INVALID_UPDATE_REQUEST: {\n    message: \"Invalid update request.\",\n    code: 1003,\n  },\n  INVALID_EXTEND_REQUEST: {\n    message: \"Invalid extend request.\",\n    code: 1004,\n  },\n  INVALID_SESSION_SETTLE_REQUEST: {\n    message: \"Invalid session settle request.\",\n    code: 1005,\n  },\n  /* ----- UNAUTHORIZED (3xxx) ----- */\n  UNAUTHORIZED_METHOD: {\n    message: \"Unauthorized method.\",\n    code: 3001,\n  },\n  UNAUTHORIZED_EVENT: {\n    message: \"Unauthorized event.\",\n    code: 3002,\n  },\n  UNAUTHORIZED_UPDATE_REQUEST: {\n    message: \"Unauthorized update request.\",\n    code: 3003,\n  },\n  UNAUTHORIZED_EXTEND_REQUEST: {\n    message: \"Unauthorized extend request.\",\n    code: 3004,\n  },\n  /* ----- REJECTED (5xxx) ----- */\n  USER_REJECTED: {\n    message: \"User rejected.\",\n    code: 5000,\n  },\n  USER_REJECTED_CHAINS: {\n    message: \"User rejected chains.\",\n    code: 5001,\n  },\n  USER_REJECTED_METHODS: {\n    message: \"User rejected methods.\",\n    code: 5002,\n  },\n  USER_REJECTED_EVENTS: {\n    message: \"User rejected events.\",\n    code: 5003,\n  },\n  UNSUPPORTED_CHAINS: {\n    message: \"Unsupported chains.\",\n    code: 5100,\n  },\n  UNSUPPORTED_METHODS: {\n    message: \"Unsupported methods.\",\n    code: 5101,\n  },\n  UNSUPPORTED_EVENTS: {\n    message: \"Unsupported events.\",\n    code: 5102,\n  },\n  UNSUPPORTED_ACCOUNTS: {\n    message: \"Unsupported accounts.\",\n    code: 5103,\n  },\n  UNSUPPORTED_NAMESPACE_KEY: {\n    message: \"Unsupported namespace key.\",\n    code: 5104,\n  },\n  /* ----- REASON (6xxx) ----- */\n  USER_DISCONNECTED: {\n    message: \"User disconnected.\",\n    code: 6000,\n  },\n  /* ----- FAILURE (7xxx) ----- */\n  SESSION_SETTLEMENT_FAILED: {\n    message: \"Session settlement failed.\",\n    code: 7000,\n  },\n  /* ----- PAIRING (10xxx) ----- */\n  WC_METHOD_UNSUPPORTED: {\n    message: \"Unsupported wc_ method.\",\n    code: 10001,\n  },\n};\n\nexport const INTERNAL_ERRORS = {\n  NOT_INITIALIZED: {\n    message: \"Not initialized.\",\n    code: 1,\n  },\n  NO_MATCHING_KEY: {\n    message: \"No matching key.\",\n    code: 2,\n  },\n  RESTORE_WILL_OVERRIDE: {\n    message: \"Restore will override.\",\n    code: 3,\n  },\n  RESUBSCRIBED: {\n    message: \"Resubscribed.\",\n    code: 4,\n  },\n  MISSING_OR_INVALID: {\n    message: \"Missing or invalid.\",\n    code: 5,\n  },\n  EXPIRED: {\n    message: \"Expired.\",\n    code: 6,\n  },\n  UNKNOWN_TYPE: {\n    message: \"Unknown type.\",\n    code: 7,\n  },\n  MISMATCHED_TOPIC: {\n    message: \"Mismatched topic.\",\n    code: 8,\n  },\n  NON_CONFORMING_NAMESPACES: {\n    message: \"Non conforming namespaces.\",\n    code: 9,\n  },\n};\n\n/**\n * Utilities\n */\nexport function getInternalError(key: InternalErrorKey, context?: string | number) {\n  const { message, code } = INTERNAL_ERRORS[key];\n  return {\n    message: context ? `${message} ${context}` : message,\n    code,\n  };\n}\n\nexport function getSdkError(key: SdkErrorKey, context?: string | number) {\n  const { message, code } = SDK_ERRORS[key];\n  return {\n    message: context ? `${message} ${context}` : message,\n    code,\n  };\n}\n","import { SessionTypes, ProposalTypes, RelayerTypes, EngineTypes } from \"@walletconnect/types\";\nimport { ErrorResponse } from \"@walletconnect/jsonrpc-types\";\nimport {\n  getNamespacesChains,\n  getNamespacesMethodsForChainId,\n  getNamespacesEventsForChainId,\n  getAccountsChains,\n} from \"./namespaces\";\nimport { getSdkError, getInternalError } from \"./errors\";\nimport { fromBase64, hasOverlap } from \"./misc\";\nimport { getChainsFromNamespace } from \"./caip\";\n\nexport type ErrorObject = { message: string; code: number } | null;\n\n// -- types validation ----------------------------------------------------- //\n\nexport function isValidArray(arr: any, itemCondition?: (item: any) => boolean) {\n  if (Array.isArray(arr)) {\n    if (typeof itemCondition !== \"undefined\" && arr.length) {\n      return arr.every(itemCondition);\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function isValidObject(obj: any) {\n  return Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\n}\n\nexport function isUndefined(input: any): input is undefined {\n  return typeof input === \"undefined\";\n}\n\nexport function isValidString(input: any, optional: boolean): input is string {\n  if (optional && isUndefined(input)) return true;\n\n  return typeof input === \"string\" && Boolean(input.trim().length);\n}\n\nexport function isValidNumber(input: any, optional: boolean) {\n  if (optional && isUndefined(input)) return true;\n\n  return typeof input === \"number\" && !isNaN(input);\n}\n\n// -- protocol validation -------------------------------------------------- //\n\nexport function isSessionCompatible(session: SessionTypes.Struct, params: EngineTypes.FindParams) {\n  const { requiredNamespaces } = params;\n  const sessionKeys = Object.keys(session.namespaces);\n  const paramsKeys = Object.keys(requiredNamespaces);\n  let compatible = true;\n\n  if (!hasOverlap(paramsKeys, sessionKeys)) return false;\n\n  sessionKeys.forEach((key) => {\n    const { accounts, methods, events } = session.namespaces[key];\n    const chains = getAccountsChains(accounts);\n    const requiredNamespace = requiredNamespaces[key];\n    if (\n      !hasOverlap(getChainsFromNamespace(key, requiredNamespace), chains) ||\n      !hasOverlap(requiredNamespace.methods, methods) ||\n      !hasOverlap(requiredNamespace.events, events)\n    ) {\n      compatible = false;\n    }\n  });\n\n  return compatible;\n}\n\nexport function isValidChainId(value: any) {\n  if (isValidString(value, false) && value.includes(\":\")) {\n    const split = value.split(\":\");\n    return split.length === 2;\n  }\n  return false;\n}\n\nexport function isValidAccountId(value: any) {\n  if (isValidString(value, false) && value.includes(\":\")) {\n    const split = value.split(\":\");\n    if (split.length === 3) {\n      const chainId = split[0] + \":\" + split[1];\n      return !!split[2] && isValidChainId(chainId);\n    }\n  }\n  return false;\n}\n\nexport function isValidUrl(value: any) {\n  function validateUrl(blob: string) {\n    try {\n      const url = new URL(blob);\n      return typeof url !== \"undefined\";\n    } catch (e) {\n      return false;\n    }\n  }\n  try {\n    if (isValidString(value, false)) {\n      const isValid = validateUrl(value);\n      if (isValid) return true;\n\n      const decoded = fromBase64(value);\n      return validateUrl(decoded);\n    }\n  } catch (e) {}\n  return false;\n}\n\nexport function isProposalStruct(input: any): input is ProposalTypes.Struct {\n  return input?.proposer?.publicKey;\n}\n\nexport function isSessionStruct(input: any): input is SessionTypes.Struct {\n  return input?.topic;\n}\n\nexport function isValidController(input: any, method: string) {\n  let error: ErrorObject = null;\n  if (!isValidString(input?.publicKey, false)) {\n    error = getInternalError(\n      \"MISSING_OR_INVALID\",\n      `${method} controller public key should be a string`,\n    );\n  }\n\n  return error;\n}\n\nexport function isValidNamespaceMethodsOrEvents(input: any): input is string {\n  let valid = true;\n  if (isValidArray(input)) {\n    if (input.length) {\n      valid = input.every((item: any) => isValidString(item, false));\n    }\n  } else {\n    valid = false;\n  }\n\n  return valid;\n}\n\nexport function isValidChains(key: string, chains: any, context: string) {\n  let error: ErrorObject = null;\n\n  if (isValidArray(chains) && chains.length) {\n    chains.forEach((chain: any) => {\n      if (error) return;\n      if (!isValidChainId(chain)) {\n        error = getSdkError(\n          \"UNSUPPORTED_CHAINS\",\n          `${context}, chain ${chain} should be a string and conform to \"namespace:chainId\" format`,\n        );\n      }\n    });\n  } else if (!isValidChainId(key)) {\n    error = getSdkError(\n      \"UNSUPPORTED_CHAINS\",\n      `${context}, chains must be defined as \"namespace:chainId\" e.g. \"eip155:1\": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: [\"eip155:1\", \"eip155:5\"] }`,\n    );\n  }\n\n  return error;\n}\n\nexport function isValidNamespaceChains(namespaces: any, method: string, type: string) {\n  let error: ErrorObject = null;\n  Object.entries(namespaces).forEach(([key, namespace]: [string, any]) => {\n    if (error) return;\n    const validChainsError = isValidChains(\n      key,\n      getChainsFromNamespace(key, namespace),\n      `${method} ${type}`,\n    );\n    if (validChainsError) {\n      error = validChainsError;\n    }\n  });\n\n  return error;\n}\n\nexport function isValidAccounts(accounts: any, context: string) {\n  let error: ErrorObject = null;\n  if (isValidArray(accounts)) {\n    accounts.forEach((account: any) => {\n      if (error) return;\n      if (!isValidAccountId(account)) {\n        error = getSdkError(\n          \"UNSUPPORTED_ACCOUNTS\",\n          `${context}, account ${account} should be a string and conform to \"namespace:chainId:address\" format`,\n        );\n      }\n    });\n  } else {\n    error = getSdkError(\n      \"UNSUPPORTED_ACCOUNTS\",\n      `${context}, accounts should be an array of strings conforming to \"namespace:chainId:address\" format`,\n    );\n  }\n\n  return error;\n}\n\nexport function isValidNamespaceAccounts(input: any, method: string) {\n  let error: ErrorObject = null;\n  Object.values(input).forEach((namespace: any) => {\n    if (error) return;\n    const validAccountsError = isValidAccounts(namespace?.accounts, `${method} namespace`);\n    if (validAccountsError) {\n      error = validAccountsError;\n    }\n  });\n\n  return error;\n}\n\nexport function isValidActions(namespace: any, context: string) {\n  let error: ErrorObject = null;\n  if (!isValidNamespaceMethodsOrEvents(namespace?.methods)) {\n    error = getSdkError(\n      \"UNSUPPORTED_METHODS\",\n      `${context}, methods should be an array of strings or empty array for no methods`,\n    );\n  } else if (!isValidNamespaceMethodsOrEvents(namespace?.events)) {\n    error = getSdkError(\n      \"UNSUPPORTED_EVENTS\",\n      `${context}, events should be an array of strings or empty array for no events`,\n    );\n  }\n\n  return error;\n}\n\nexport function isValidNamespaceActions(input: any, method: string) {\n  let error: ErrorObject = null;\n  Object.values(input).forEach((namespace: any) => {\n    if (error) return;\n    const validActionsError = isValidActions(namespace, `${method}, namespace`);\n    if (validActionsError) {\n      error = validActionsError;\n    }\n  });\n\n  return error;\n}\n\nexport function isValidRequiredNamespaces(input: any, method: string, type: string) {\n  let error: ErrorObject = null;\n  if (input && isValidObject(input)) {\n    const validActionsError = isValidNamespaceActions(input, method);\n    if (validActionsError) {\n      error = validActionsError;\n    }\n    const validChainsError = isValidNamespaceChains(input, method, type);\n    if (validChainsError) {\n      error = validChainsError;\n    }\n  } else {\n    error = getInternalError(\n      \"MISSING_OR_INVALID\",\n      `${method}, ${type} should be an object with data`,\n    );\n  }\n\n  return error;\n}\n\nexport function isValidNamespaces(input: any, method: string) {\n  let error: ErrorObject = null;\n  if (input && isValidObject(input)) {\n    const validActionsError = isValidNamespaceActions(input, method);\n    if (validActionsError) {\n      error = validActionsError;\n    }\n    const validAccountsError = isValidNamespaceAccounts(input, method);\n    if (validAccountsError) {\n      error = validAccountsError;\n    }\n  } else {\n    error = getInternalError(\n      \"MISSING_OR_INVALID\",\n      `${method}, namespaces should be an object with data`,\n    );\n  }\n\n  return error;\n}\n\nexport function isValidRelay(input: any): input is RelayerTypes.ProtocolOptions {\n  return isValidString(input.protocol, true);\n}\n\nexport function isValidRelays(\n  input: any,\n  optional: boolean,\n): input is RelayerTypes.ProtocolOptions[] {\n  let valid = false;\n\n  if (optional && !input) valid = true;\n  else if (input && isValidArray(input) && input.length) {\n    input.forEach((relay: RelayerTypes.ProtocolOptions) => {\n      valid = isValidRelay(relay);\n    });\n  }\n\n  return valid;\n}\n\nexport function isValidId(input: any) {\n  return typeof input === \"number\";\n}\n\nexport function isValidParams(input: any) {\n  return typeof input !== \"undefined\" && typeof input !== null;\n}\n\nexport function isValidErrorReason(input: any): input is ErrorResponse {\n  if (!input) return false;\n  if (typeof input !== \"object\") return false;\n  if (!input.code || !isValidNumber(input.code, false)) return false;\n  if (!input.message || !isValidString(input.message, false)) return false;\n\n  return true;\n}\n\nexport function isValidRequest(request: any) {\n  if (isUndefined(request)) return false;\n  if (!isValidString(request.method, false)) return false;\n  return true;\n}\n\nexport function isValidResponse(response: any) {\n  if (isUndefined(response)) return false;\n  if (isUndefined(response.result) && isUndefined(response.error)) return false;\n  if (!isValidNumber(response.id, false)) return false;\n  if (!isValidString(response.jsonrpc, false)) return false;\n  return true;\n}\n\nexport function isValidEvent(event: any) {\n  if (isUndefined(event)) return false;\n  if (!isValidString(event.name, false)) return false;\n  return true;\n}\n\nexport function isValidNamespacesChainId(namespaces: SessionTypes.Namespaces, chainId: string) {\n  if (!isValidChainId(chainId)) return false;\n  const chains = getNamespacesChains(namespaces);\n  if (!chains.includes(chainId)) return false;\n\n  return true;\n}\n\nexport function isValidNamespacesRequest(\n  namespaces: SessionTypes.Namespaces,\n  chainId: string,\n  method: string,\n) {\n  if (!isValidString(method, false)) return false;\n  const methods = getNamespacesMethodsForChainId(namespaces, chainId);\n  return methods.includes(method);\n}\n\nexport function isValidNamespacesEvent(\n  namespaces: SessionTypes.Namespaces,\n  chainId: string,\n  eventName: string,\n) {\n  if (!isValidString(eventName, false)) return false;\n  const events = getNamespacesEventsForChainId(namespaces, chainId);\n  return events.includes(eventName);\n}\n\nexport function isConformingNamespaces(\n  requiredNamespaces: ProposalTypes.RequiredNamespaces,\n  namespaces: SessionTypes.Namespaces,\n  context: string,\n) {\n  let error: ErrorObject = null;\n\n  const parsedRequired = parseNamespaces(requiredNamespaces);\n  const parsedApproved = parseApprovedNamespaces(namespaces);\n  const requiredChains = Object.keys(parsedRequired);\n  const approvedChains = Object.keys(parsedApproved);\n\n  const uniqueRequired = filterDuplicateNamespaces(Object.keys(requiredNamespaces));\n  const uniqueApproved = filterDuplicateNamespaces(Object.keys(namespaces));\n  const missingRequiredNamespaces = uniqueRequired.filter(\n    (namespace) => !uniqueApproved.includes(namespace),\n  );\n\n  if (missingRequiredNamespaces.length) {\n    error = getInternalError(\n      \"NON_CONFORMING_NAMESPACES\",\n      `${context} namespaces keys don't satisfy requiredNamespaces.\n      Required: ${missingRequiredNamespaces.toString()}\n      Received: ${Object.keys(namespaces).toString()}`,\n    );\n  }\n\n  if (!hasOverlap(requiredChains, approvedChains)) {\n    error = getInternalError(\n      \"NON_CONFORMING_NAMESPACES\",\n      `${context} namespaces chains don't satisfy required namespaces.\n      Required: ${requiredChains.toString()}\n      Approved: ${approvedChains.toString()}`,\n    );\n  }\n\n  // validate inline defined chains with approved accounts\n  Object.keys(namespaces).forEach((chain) => {\n    if (!chain.includes(\":\")) return;\n    if (error) return;\n    const chains = getAccountsChains(namespaces[chain].accounts);\n    if (!chains.includes(chain)) {\n      error = getInternalError(\n        \"NON_CONFORMING_NAMESPACES\",\n        `${context} namespaces accounts don't satisfy namespace accounts for ${chain}\n        Required: ${chain}\n        Approved: ${chains.toString()}`,\n      );\n    }\n  });\n\n  requiredChains.forEach((chain) => {\n    if (error) return;\n\n    if (!hasOverlap(parsedRequired[chain].methods, parsedApproved[chain].methods)) {\n      error = getInternalError(\n        \"NON_CONFORMING_NAMESPACES\",\n        `${context} namespaces methods don't satisfy namespace methods for ${chain}`,\n      );\n    } else if (!hasOverlap(parsedRequired[chain].events, parsedApproved[chain].events)) {\n      error = getInternalError(\n        \"NON_CONFORMING_NAMESPACES\",\n        `${context} namespaces events don't satisfy namespace events for ${chain}`,\n      );\n    }\n  });\n\n  return error;\n}\n\nfunction parseNamespaces(namespaces: ProposalTypes.RequiredNamespaces) {\n  const parsed = {};\n  Object.keys(namespaces).forEach((key) => {\n    // e.g. `eip155:1`\n    const isInlineChainDefinition = key.includes(\":\");\n\n    if (isInlineChainDefinition) {\n      parsed[key] = namespaces[key];\n    } else {\n      namespaces[key].chains?.forEach((chain) => {\n        parsed[chain] = {\n          methods: namespaces[key].methods,\n          events: namespaces[key].events,\n        };\n      });\n    }\n  });\n  return parsed;\n}\n\nfunction filterDuplicateNamespaces(namespaces: string[]) {\n  return [\n    ...new Set(\n      namespaces.map((namespace) =>\n        namespace.includes(\":\") ? namespace.split(\":\")[0] : namespace,\n      ),\n    ),\n  ];\n}\n\nfunction parseApprovedNamespaces(namespaces: SessionTypes.Namespaces) {\n  const parsed = {};\n  Object.keys(namespaces).forEach((key) => {\n    const isInlineChainDefinition = key.includes(\":\");\n    if (isInlineChainDefinition) {\n      parsed[key] = namespaces[key];\n    } else {\n      const chains = getAccountsChains(namespaces[key].accounts);\n      chains?.forEach((chain) => {\n        parsed[chain] = {\n          accounts: namespaces[key].accounts.filter((account: string) =>\n            account.includes(`${chain}:`),\n          ),\n          methods: namespaces[key].methods,\n          events: namespaces[key].events,\n        };\n      });\n    }\n  });\n  return parsed;\n}\n\nexport function isValidRequestExpiry(expiry: number, boundaries: { min: number; max: number }) {\n  return isValidNumber(expiry, false) && expiry <= boundaries.max && expiry >= boundaries.min;\n}\n","import { getEnvironment, ENV_MAP, isBrowser, isReactNative } from \"./misc\";\n\nexport function isOnline(): Promise<boolean> {\n  const env = getEnvironment();\n  return new Promise((resolve) => {\n    switch (env) {\n      case ENV_MAP.browser:\n        resolve(getBrowserOnlineStatus());\n        break;\n      case ENV_MAP.reactNative:\n        resolve(getReactNativeOnlineStatus());\n        break;\n      case ENV_MAP.node:\n        resolve(getNodeOnlineStatus());\n        break;\n      default:\n        resolve(true);\n    }\n  });\n}\n\nexport function getBrowserOnlineStatus() {\n  return isBrowser() && navigator?.onLine;\n}\n\nexport async function getReactNativeOnlineStatus(): Promise<boolean> {\n  // global.NetInfo is set in react-native-compat\n  if (isReactNative() && typeof global !== \"undefined\" && (global as any)?.NetInfo) {\n    const state = await (global as any)?.NetInfo.fetch();\n    return state?.isConnected;\n  }\n  // fallback to true if global.NetInfo is undefined, meaning an older version of react-native-compat is used\n  return true;\n}\n\nexport function getNodeOnlineStatus() {\n  /**\n   * TODO: need to implement\n   */\n  return true;\n}\n\nexport function subscribeToNetworkChange(callbackHandler: (connected: boolean) => void) {\n  const env = getEnvironment();\n  switch (env) {\n    case ENV_MAP.browser:\n      subscribeToBrowserNetworkChange(callbackHandler);\n      break;\n    case ENV_MAP.reactNative:\n      subscribeToReactNativeNetworkChange(callbackHandler);\n      break;\n    case ENV_MAP.node:\n      // wip: need to implement\n      break;\n    default:\n      break;\n  }\n}\n\nexport function subscribeToBrowserNetworkChange(callbackHandler: (connected: boolean) => void) {\n  if (!isReactNative() && isBrowser()) {\n    window.addEventListener(\"online\", () => callbackHandler(true));\n    window.addEventListener(\"offline\", () => callbackHandler(false));\n  }\n}\n\n// global.NetInfo is set in react-native-compat\nexport function subscribeToReactNativeNetworkChange(callbackHandler: (connected: boolean) => void) {\n  if (isReactNative() && typeof global !== \"undefined\" && (global as any)?.NetInfo) {\n    (global as any)?.NetInfo.addEventListener((state: any) => callbackHandler(state?.isConnected));\n  }\n}\n","const memoryStore = {};\n\nexport abstract class MemoryStore {\n  static get<T = unknown>(key: string) {\n    return memoryStore[key] as T | undefined;\n  }\n\n  static set(key: string, value: unknown) {\n    memoryStore[key] = value;\n  }\n\n  static delete(key: string) {\n    delete memoryStore[key];\n  }\n}\n"],"names":["CAIP_DELIMITER","chain","namespace","reference","params","account","address","array","parser","unique","str","value","accounts","namespaces","keys","key","ns","chains","requiredNamespaces","namespaceProps","getDocument","getNavigator","_a","e","queryString","newQueryParams","urlSearchParams","getWindowMetadata","protocol","version","env","metadata","getLocation","OS","Version","info","detect","os","sdkVersion","id","relayUrl","auth","projectId","useOnCloseEvent","bundleId","packageName","splitUrl","ua","url","domain","obj","type","context","depth","a","b","x","arr","map","cb","res","word","c","w","expiry","FIVE_MINUTES","expireErrorMessage","timeout","toMiliseconds","cacheResolve","cacheReject","cacheTimeout","result","promiseResolve","promiseReject","err","promise","resolve","reject","error","topic","target","parsed","ttl","now","fromMiliseconds","event","wcDeepLink","json","deeplink","link","requestId","sessionTopic","payload","startApp","storage","arr1","arr2","param","index","r","input","removePadding","encoded","encodedString","ms","DEFAULT_RPC_URL","reconstructedMessage","cacaoSignature","chainId","baseRpcUrl","message","signature","recoverAddress","hashMessage","parsedChain","parseChainId","eip1271MagicValue","dynamicTypeOffset","dynamicTypeLength","nonPrefixedSignature","nonPrefixedHashedMessage","data","response","generateJsonRpcId","didPrefix","iss","segments","cacao","reconstructed","walletAddress","verifySignature","header","statement","uri","nonce","issuedAt","expirationTime","notBefore","resources","resource","recap","decoded","val","requestPayload","authPayload","methods","requested","supportedChains","getCommonValuesInArrays","requestedRecaps","updatedResources","actions","supportedActions","formattedActions","updatedRecap","__spreadProps","__spreadValues","_b","action","abilities","ability","resourceAbilities","limits","limit","recap1","recap2","decoded1","decoded2","merged","mergedRecap","base","statementForRecap","currentCounter","uniqueAbilities","recapStatemet","recapStatement","ZERO_INDEX","TYPE_LENGTH","IV_LENGTH","KEY_LENGTH","keyPair","x25519","toString","random","randomBytes","privateKeyA","publicKeyB","sharedKey","fromString","symKey","HKDF","SHA256","hash","byte","senderPublicKey","iv","sealed","ChaCha20Poly1305","encoding","box","concat","bytes","slice1","slice2","slice3","opts","deserialized","keyData","EC","base64UrlToBase64","base64Url","base64","padding","base64UrlDecode","token","headerBase64Url","payloadBase64Url","signatureBase64Url","signatureBuffer","s","signingInput","buffer","hashHex","decodeJWT","jsonrpc","RELAY_JSONRPC","delimiter","relay","prefix","name","fromBase64","pathStart","pathEnd","requiredValues","queryParams","k","relayParams","universalLink","encodedEnvelope","events","caller","validNamespacesError","isValidNamespaces","required","values","optionalNamespaces","supportedNamespaces","normalizedRequired","normalizedOptional","supportedMethods","supportedEvents","supportedAccounts","isConformingNamespaces","approvedNamespaces","requiredNamespace","method","optionalNamespace","_c","_d","_e","_f","chainsToAdd","methodsToAdd","eventsToAdd","accountsToAdd","mergeArrays","normalizedNamespaces","isValidObject","normalizedKey","_","code","itemCondition","optional","session","sessionKeys","paramsKeys","compatible","hasOverlap","getAccountsChains","getChainsFromNamespace","split","validateUrl","blob","getInternalError","valid","item","getSdkError","validChainsError","validAccountsError","validActionsError","request","getNamespacesChains","getNamespacesMethodsForChainId","eventName","getNamespacesEventsForChainId","parsedRequired","parseNamespaces","parsedApproved","parseApprovedNamespaces","requiredChains","approvedChains","uniqueRequired","filterDuplicateNamespaces","uniqueApproved","missingRequiredNamespaces","boundaries","getEnvironment","ENV_MAP","isBrowser","isReactNative","state","callbackHandler","memoryStore"],"mappings":"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"}